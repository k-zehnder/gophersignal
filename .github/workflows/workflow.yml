name: workflow

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Setup and test Go backend
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: Get dependencies
        run: |
          cd backend
          go get -v -t -d ./...

      - name: Build
        run: |
          cd backend
          go build -v ./...

      - name: Run tests with coverage
        run: |
          cd backend
          go test -v -coverprofile=coverage.out ./...

      - name: Generate coverage HTML report
        run: |
          cd backend
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage.html

      # Setup Node.js for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies (Node.js)
        run: |
          cd frontend
          npm install

      # Start Next.js server in the background
      - name: Start Next.js Server
        run: |
          cd frontend
          nohup npm run dev &

      - name: Wait for Server to be Up
        run: sleep 10

      # Run Cypress tests and capture output
      - name: Run Cypress tests and capture output
        run: |
          cd frontend
          npx cypress run | tee cypress-output.txt
          if grep -q "0 failing" cypress-output.txt; then
            echo "Cypress tests passed"
          else
            echo "Cypress tests failed"
            exit 1
          fi

      # Upload Cypress test output
      - name: Upload Cypress test output
        uses: actions/upload-artifact@v3
        with:
          name: cypress-output
          path: frontend/cypress-output.txt
