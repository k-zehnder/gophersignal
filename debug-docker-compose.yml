# Breaks if you don't use MySQL 8 (i.e., if you use MySQL 9)
services:
  frontend:
    image: kjzehnder3/gophersignal-frontend:latest
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      NEXT_PUBLIC_ENV: production

  backend:
    image: kjzehnder3/gophersignal-backend:latest
    ports:
      - '8080:8080'
    networks:
      - app-network
    env_file:
      - .env
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: gophersignal
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

  hackernews_scraper:
    image: kjzehnder3/gophersignal-hackernews_scraper:latest
    networks:
      - app-network
    env_file:
      - .env
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: gophersignal
    restart: always

  mysql:
    image: mysql:8.0
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'mysqladmin ping -h localhost -uroot -p$${MYSQL_ROOT_PASSWORD}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '3306:3306'
    volumes:
      - mysql_gophersignal:/var/lib/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: gophersignal
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
    command: --bind-address=0.0.0.0
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    networks:
      - app-network
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/production.conf:/etc/nginx/nginx.conf
      - ./frontend/out:/usr/share/nginx/html
    depends_on:
      - backend
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mysql_gophersignal:
    driver: local
