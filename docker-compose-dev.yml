services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    ports:
      - 3000:3000
    env_file:
      - .env
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    networks:
      - app-network
    ports:
      - 8080:8080
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy

  hackernews_scraper:
    build:
      context: ./hackernews_scraper
      dockerfile: Dockerfile.dev
    volumes:
      - ./hackernews_scraper:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - mysql
    env_file:
      - .env

  mysql:
    image: mysql:latest
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h localhost -uroot -p$${MYSQL_ROOT_PASSWORD}']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 3306:3306
    volumes:
      - mysql_gophersignal_dev:/var/lib/mysql
    networks:
      - app-network
    env_file:
      - .env

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/development.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

networks:
  app-network:
    driver: bridge

volumes:
  mysql_gophersignal_dev:
    driver: local
