services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    ports:
      - 3000:3000
    env_file:
      - .env
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    networks:
      - app-network
    ports:
      - 8080:8080
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy

  rss:
    build:
      context: ./rss
      dockerfile: Dockerfile.dev
    volumes:
      - ./rss:/app
      - /app/node_modules
    networks:
      - app-network
    ports:
      - 9090:9090
    env_file:
      - .env
    depends_on:
      - mysql

  hackernews_scraper:
    build:
      context: ./hackernews_scraper
      dockerfile: Dockerfile.dev
    volumes:
      - ./hackernews_scraper:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - mysql
    env_file:
      - .env

  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile.dev
    ports:
      - 11434:11434
    volumes:
      - ollama:/ollama
    environment:
      - OLLAMA_CONFIG=/ollama/config
      - OLLAMA_CONTEXT_LENGTH=8192
      - OLLAMA_FLASH_ATTENTION=1  # disable if this does not work on your GPU
      - OLLAMA_KV_CACHE_TYPE=q4_0  # takes less VRAM and RAM
    healthcheck:
      test: ['CMD', 'test', '-f', '/tmp/ollama_model_ready']
      interval: 10s
      timeout: 10s
      retries: 12
      start_period: 360s
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'mysqladmin ping -h localhost -uroot -p$${MYSQL_ROOT_PASSWORD}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 3306:3306
    volumes:
      - mysql_gophersignal_dev:/var/lib/mysql
    networks:
      - app-network
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    volumes:
      - ./nginx/development.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - app-network
    depends_on:
      ollama:
        condition: service_healthy
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mysql_gophersignal_dev:
    driver: local
  ollama:
    driver: local
